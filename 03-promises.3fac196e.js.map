{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,GADYC,SAASC,cAAc,UAC3BD,SAASC,cAAc,UAC/BC,EAAOH,EAAMI,SAASC,KACtBC,EAAQN,EAAMI,SAASG,MACvBC,EAASR,EAAMI,SAASK,OAgB9B,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAtBPZ,EAAMqB,iBAAiB,UAEvB,SAAwBC,GACtBA,EAAIC,iBAEJ,IADA,IAAIC,EAAoBC,OAAOnB,EAAMoB,OAC5BC,EAAI,EAAGA,GAAKnB,EAAOkB,MAAOC,GAAK,EACtCjB,EAAciB,EAAGH,GACdI,MAAK,SAAAC,G,OAAQC,EAAAhC,GAASiC,OAAOC,QAAQ,GAAQZ,OAALS,G,IACxCI,OAAM,SAAAC,G,OAASJ,EAAAhC,GAASiC,OAAOI,QAAQ,GAASf,OAANc,G,IAC7CV,GAAqBC,OAAOtB,EAAKuB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitBtn = document.querySelector('button');\nconst input = document.querySelector('.form');\nconst step = input.elements.step;\nconst delay = input.elements.delay;\nconst amount = input.elements.amount;\n\ninput.addEventListener('submit', submitForClick);\n\nfunction submitForClick(evt) {\n  evt.preventDefault();\n  let currentDelayValue = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, currentDelayValue)\n      .then(data => Notiflix.Notify.success(`${data}`))\n      .catch(error => Notiflix.Notify.failure(`${error}`));\n    currentDelayValue += Number(step.value);\n  }\n}\nNotiflix;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$input","document","querySelector","$ce04d3a99e08e73b$var$step","elements","step","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","evt","preventDefault","currentDelayValue","Number","value","i","then","data","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.3fac196e.js.map"}